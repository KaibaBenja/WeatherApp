{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaiba\\\\Escritorio\\\\weather_app\\\\src\\\\Components\\\\WeatherPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { apiKey } from '../constanst';\nimport Form from './Form';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherPanel = () => {\n  _s();\n\n  let urlForecast = `https://api.openweathermap.org/data/2.5/forecast?&cnt=40&lang=es&units=metric&appid=${apiKey}`;\n  let cityUrl = '&q=';\n  let urlWeather = `https://api.openweathermap.org/data/2.5/weather?&lang=es&units=metric&appid=${apiKey}`;\n  const [weather, setWeather] = useState([]);\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [location, setLocation] = useState('');\n\n  const getLocation = async loc => {\n    setLoading(true);\n    setLocation(loc); //Weather\n\n    urlWeather = urlWeather + cityUrl + loc;\n    await fetch(urlWeather).then(res => {\n      if (!res.ok) throw {\n        res\n      };\n      return res.json();\n    }).then(weatherData => {\n      console.log(weatherData);\n      setWeather(weatherData);\n    }).catch(error => {\n      console.log(error);\n      setLoading(false);\n      setShow(false);\n    }); // Forecast\n\n    urlForecast = urlForecast + cityUrl + loc;\n    await fetch(urlForecast).then(res => {\n      if (!res.ok) throw {\n        res\n      };\n      return res.json();\n    }).then(forecastData => {\n      console.log(forecastData);\n      setForecast(forecastData);\n      setLoading(false);\n      setShow(true);\n    }).catch(error => {\n      console.log(error);\n      setLoading(false);\n      setShow(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      newLocation: getLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      showData: show,\n      loadingData: loading,\n      weather: weather,\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherPanel, \"zbI0JQwWV3F0oeaUX04V6JzTif8=\");\n\n_c = WeatherPanel;\nexport default WeatherPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPanel\");","map":{"version":3,"names":["React","useState","apiKey","Form","Card","WeatherPanel","urlForecast","cityUrl","urlWeather","weather","setWeather","forecast","setForecast","loading","setLoading","show","setShow","location","setLocation","getLocation","loc","fetch","then","res","ok","json","weatherData","console","log","catch","error","forecastData"],"sources":["C:/Users/kaiba/Escritorio/weather_app/src/Components/WeatherPanel.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { apiKey } from '../constanst';\r\nimport Form from './Form';\r\nimport Card from './Card';\r\n\r\nconst WeatherPanel = () => {\r\n\r\n    let urlForecast = `https://api.openweathermap.org/data/2.5/forecast?&cnt=40&lang=es&units=metric&appid=${apiKey}`;\r\n    let cityUrl = '&q=';\r\n    let urlWeather = `https://api.openweathermap.org/data/2.5/weather?&lang=es&units=metric&appid=${apiKey}`;\r\n\r\n    const [weather, setWeather] = useState([]);\r\n    const [forecast, setForecast] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [show,setShow] = useState(false);\r\n    const[location, setLocation] = useState('');\r\n\r\n    const getLocation = async(loc) =>{\r\n        setLoading(true);\r\n        setLocation(loc);\r\n\r\n        //Weather\r\n\r\n        urlWeather = urlWeather + cityUrl + loc;\r\n\r\n        await fetch(urlWeather).then(res => {\r\n            if(!res.ok) throw {res}\r\n            return res.json()\r\n        }).then(weatherData => {\r\n            console.log(weatherData);\r\n            setWeather(weatherData);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            setLoading(false);\r\n            setShow(false);\r\n        })\r\n\r\n        // Forecast\r\n\r\n        urlForecast = urlForecast + cityUrl + loc;\r\n\r\n        await fetch(urlForecast).then(res => {\r\n            if(!res.ok) throw {res}\r\n            return res.json()\r\n        }).then(forecastData => {\r\n            console.log(forecastData);\r\n            setForecast(forecastData);\r\n\r\n            setLoading(false);\r\n            setShow(true);\r\n        \r\n        }).catch(error => {\r\n            console.log(error);\r\n            setLoading(false);\r\n            setShow(false);\r\n        })\r\n\r\n    }\r\n\r\n    return(\r\n        \r\n        <React.Fragment>\r\n            <Form \r\n\r\n                newLocation = {getLocation}\r\n\r\n            />\r\n\r\n            <Card\r\n                showData = {show}\r\n                loadingData = {loading}\r\n                weather = {weather}\r\n                forecast = {forecast}\r\n            />\r\n        </React.Fragment>\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default WeatherPanel"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEvB,IAAIC,WAAW,GAAI,uFAAsFJ,MAAO,EAAhH;EACA,IAAIK,OAAO,GAAG,KAAd;EACA,IAAIC,UAAU,GAAI,+EAA8EN,MAAO,EAAvG;EAEA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACc,IAAD,EAAMC,OAAN,IAAiBf,QAAQ,CAAC,KAAD,CAA/B;EACA,MAAK,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAvC;;EAEA,MAAMkB,WAAW,GAAG,MAAMC,GAAN,IAAa;IAC7BN,UAAU,CAAC,IAAD,CAAV;IACAI,WAAW,CAACE,GAAD,CAAX,CAF6B,CAI7B;;IAEAZ,UAAU,GAAGA,UAAU,GAAGD,OAAb,GAAuBa,GAApC;IAEA,MAAMC,KAAK,CAACb,UAAD,CAAL,CAAkBc,IAAlB,CAAuBC,GAAG,IAAI;MAChC,IAAG,CAACA,GAAG,CAACC,EAAR,EAAY,MAAM;QAACD;MAAD,CAAN;MACZ,OAAOA,GAAG,CAACE,IAAJ,EAAP;IACH,CAHK,EAGHH,IAHG,CAGEI,WAAW,IAAI;MACnBC,OAAO,CAACC,GAAR,CAAYF,WAAZ;MACAhB,UAAU,CAACgB,WAAD,CAAV;IACH,CANK,EAMHG,KANG,CAMGC,KAAK,IAAI;MACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACAhB,UAAU,CAAC,KAAD,CAAV;MACAE,OAAO,CAAC,KAAD,CAAP;IACH,CAVK,CAAN,CAR6B,CAoB7B;;IAEAV,WAAW,GAAGA,WAAW,GAAGC,OAAd,GAAwBa,GAAtC;IAEA,MAAMC,KAAK,CAACf,WAAD,CAAL,CAAmBgB,IAAnB,CAAwBC,GAAG,IAAI;MACjC,IAAG,CAACA,GAAG,CAACC,EAAR,EAAY,MAAM;QAACD;MAAD,CAAN;MACZ,OAAOA,GAAG,CAACE,IAAJ,EAAP;IACH,CAHK,EAGHH,IAHG,CAGES,YAAY,IAAI;MACpBJ,OAAO,CAACC,GAAR,CAAYG,YAAZ;MACAnB,WAAW,CAACmB,YAAD,CAAX;MAEAjB,UAAU,CAAC,KAAD,CAAV;MACAE,OAAO,CAAC,IAAD,CAAP;IAEH,CAVK,EAUHa,KAVG,CAUGC,KAAK,IAAI;MACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACAhB,UAAU,CAAC,KAAD,CAAV;MACAE,OAAO,CAAC,KAAD,CAAP;IACH,CAdK,CAAN;EAgBH,CAxCD;;EA0CA,oBAEI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,IAAD;MAEI,WAAW,EAAIG;IAFnB;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI,QAAC,IAAD;MACI,QAAQ,EAAIJ,IADhB;MAEI,WAAW,EAAIF,OAFnB;MAGI,OAAO,EAAIJ,OAHf;MAII,QAAQ,EAAIE;IAJhB;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAmBH,CAzED;;GAAMN,Y;;KAAAA,Y;AA2EN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}